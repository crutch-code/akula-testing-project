micronaut:
  application:
    name: 'akula'
  data:
    pageable:
      default-page-size: 10
      max-page-size: 50
#  executors:
#    io:
#      type: fixed
#      nThreads: 10
  server:
    port: ${PORT:8080}
    idle-timeout: 10m
    max-request-size: '100Mb'
    multipart:
      enabled: true
      max-file-size: '100'
      threshold: '100'
      mixed: true
    cors:
      enabled: true
  router:
    static-resources:
      static:
        paths: classpath:web
        mapping: /**
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: PT1M
        descriptions: true
endpoints:
  all:
    port: 8081
  loggers:
    enabled: true
    sensitive: false
    write-sensitive: false
  prometheus:
    sensitive: false
  info:
    enabled: true
    sensitive: false
  health:
    enabled: true
    sensitive: false
    details-visible: ANONYMOUS
    url:
      enabled: true

datasources:
  default:
    url: ${JDBC_URL:`jdbc:postgresql://localhost:5432/akula`}?ApplicationName=${micronaut.application.name}
    username: ${JDBC_USER:akula}
    password: ${JDBC_PASSWORD:akula}
    driverClassName: ${JDBC_DRIVER:org.postgresql.Driver}
    maximum-pool-size: 15
    idle-timeout: 30000

jpa:
  default:
    packages-to-scan:
      - 'gcg.akula.entity.jpa'
    properties:
      hibernate:
        generate_statistics: false
        naming:
          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        enable_lazy_load_no_trans: true
        hbm2ddl: update
        show_sql: true
        jdbc:
          batch_size: 100
        order_inserts: true
jackson:
  module-scan: true
  bean-introspection-module: true
  json-view:
    enabled: true